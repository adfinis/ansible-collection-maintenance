---

- name: This task only serves as a template for the tasks below
  ansible.builtin.set_fact:
    ignoreme: &task
      name: "{{ vars.taskid }}: {{ vars.name }}"
      register: task
      when:
        - "vars.taskid not in maintenance_exclude_tasks"
        - "maintenance_only is not defined or maintenance_only == vars.taskid"
  vars:
    taskid: ignore-me
    name: bar

- name: Load release-specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "debian_{{ ansible_facts.distribution_major_version }}.yml"


- <<: *task
  vars:
    taskid: 11-011
    name: "Security: Are the security updates in the sources.list?"
  check_mode: yes
  ansible.builtin.apt_repository:
    repo: "{{ debian_sources_list_security | default(debian_sources_list_security_default) }}"

- <<: *task
  vars:
    taskid: 11-012
    name: "Repository: Check if repository is set to release name (e.g. 'bullseye') and not to 'stable' | Find all sources.list files"
  ansible.builtin.find:
    paths:
      - /etc/apt/sources.list.d
    patterns: ['*.list']
  register: debian_sources_list_files

- <<: *task
  vars:
    taskid: 11-012
    name: "Repository: Check if repository is set to release name (e.g. 'bullseye') and not to 'stable' | Check all sources.list files"
  check_mode: yes
  ansible.builtin.replace:
    path: "{{ item.1 }}"
    regexp: "(://[^\\s]+\\s+){{ item.0 }}\\b"
    replace: "\\1{{ ansible_facts.distribution_release }}"
  with_nested:
    - [stable, oldstable, oldoldstable]
    - "{{ ['/etc/apt/sources.list'] + (debian_sources_list_files.files | map(attribute='path') | list) }}"

- <<: *task
  vars:
    taskid: 11-013
    name: "For old distributions, has the repository been moved to http://archive.debian.org/ already? | Test archive.debian.org"
  ansible.builtin.uri:
    url: "http://archive.debian.org/debian/dists/{{ ansible_facts.distribution_release }}/Release"
    method: HEAD
    status_code: [200, 404]
  register: debian_archive_repo_url
  changed_when: no

- <<: *task
  vars:
    taskid: 11-013
    name: "For old distributions, has the repository been moved to http://archive.debian.org/ already? | grep sources.list"
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list
    line: "deb http://archive.debian.org/debian/ {{ ansible_facts.distribution_release }} main contrib non-free"
    regexp: "^\\s+deb[^-].*\\s+http://archive.debian.org/debian/?\\s+{{ ansible_facts.distribution_release }}\\s+.*$"
  # Even though this task runs all the time, the second changed_when rule causes it to only report a diff if running
  # on a distribution actually present on archive.debian.org.  Since the task is running in check mode, it doesn't do any
  # damage on non-archived distros, but won't report as changed.
  check_mode: yes
  changed_when:
    - "task.changed"
    - "debian_archive_repo_url.status == 200"

- <<: *task
  vars:
    taskid: 11-014
    name: "Update package lists and check for errors"
  ansible.builtin.apt:
    update_cache: yes
  changed_when: no

- <<: *task
  vars:
    taskid: 11-016
    name: "dpkg status: Are there packages which do not have the dpkg status ii or hi? | Get list of matching packages"
  ansible.builtin.shell: dpkg -l | tail -n +6 | grep -vE '^[hi]i'  # noqa risky-shell-pipe  never fails
  register: debian_dpkg_status
  check_mode: no
  changed_when: no
  failed_when: "debian_dpkg_status.rc not in [0, 1]"

- <<: *task
  vars:
    taskid: 11-016
    name: "dpkg status: Are there packages which do not have the dpkg status ii or hi? | Report matching packages"
  ansible.builtin.debug:
    var: "debian_dpkg_status.stdout_lines"
  changed_when: "debian_dpkg_status.stdout_lines | length > 0"

- <<: *task
  vars:
    taskid: 11-017
    name: "apt: Simulate the package upgrade"
  ansible.builtin.apt:
    update_cache: yes
    upgrade: safe
  check_mode: yes

- <<: *task
  vars:
    taskid: 11-019
    name: "apt: Remove obsolete packages"
  ansible.builtin.apt:
    autoremove: yes
  check_mode: yes

- <<: *task
  vars:
    taskid: 11-020
    name: "boot-config: Check boot configuration: update initramfs"
  ansible.builtin.command: update-initramfs -u
  changed_when: no  # only requires human interaction in case of errors

- <<: *task
  vars:
    taskid: 11-020
    name: "boot-config: Check boot configuration: keep bootloader up to date"
  ansible.builtin.command: update-grub
  changed_when: no  # only requires human interaction in case of errors

- <<: *task
  vars:
    taskid: 10-061
    name: "Updates: Check if a major update is pending. | Update Debian distribution info"
  ansible.builtin.apt:
    name:
      - distro-info
      - distro-info-data
    state: latest  # noqa package-latest  we need the latest distro-info-data
    update_cache: yes
  changed_when: no  # Don't care if this task actually changed, it's only preparation for the following task

- <<: *task
  vars:
    taskid: 10-061
    name: "Updates: Check if a major update is pending. | Check release name against stable"
  tags: molecule-idempotence-notest # this will always be changed on old distros until they are upgraded
  ansible.builtin.command: distro-info --stable
  changed_when:
    - "ansible_facts.distribution_release != 'testing'"
    - "ansible_facts.distribution_release not in task.stdout_lines"
